# -*- coding: utf-8 -*-
"""Predictive_Maintenance .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eHAx1Q88XCXAhvC5p0QVLNeBbelvVCLC

Predictive Maintenance Model:

Writing the Python script to load data, preprocess it, and train a machine learning model to predict maintenance needs.
"""

# predictive_maintenance.py
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import classification_report, confusion_matrix
import matplotlib.pyplot as plt

def load_and_preprocess_data():
    df = pd.read_csv('sensor_data.csv')
    X = df.drop(['maintenance_needed', 'machine_name'], axis=1)
    y = df['maintenance_needed']

    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

    scaler = StandardScaler()
    X_train = scaler.fit_transform(X_train)
    X_test = scaler.transform(X_test)

    return X_train, X_test, y_train, y_test

def train_and_evaluate_model(X_train, X_test, y_train, y_test):
    mlp = MLPClassifier(hidden_layer_sizes=(50, 50, 50), max_iter=1000, verbose=True)
    mlp.fit(X_train, y_train)

    predictions = mlp.predict(X_test)
    print(confusion_matrix(y_test, predictions))
    print(classification_report(y_test, predictions))

    # Plot training loss
    plt.plot(mlp.loss_curve_)
    plt.title('Training Loss Curve')
    plt.xlabel('Iterations')
    plt.ylabel('Loss')
    plt.show()

    return mlp, predictions

if __name__ == '__main__':
    X_train, X_test, y_train, y_test = load_and_preprocess_data()
    model, predictions = train_and_evaluate_model(X_train, X_test, y_train, y_test)